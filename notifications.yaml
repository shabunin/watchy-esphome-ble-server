globals:
  - id: global_notifications
    type: std::map<int, std::string>
    restore_value: no
  - id: global_notifications_menu_root # store it as a global to be able to manipulate from lambda
    type: display_menu_base::MenuItemMenu*
    initial_value: 'nullptr'

graphical_display_menu:
  - id: notifications_menu
    font: ubuntumono22
    active: true
    on_redraw:
      then:
        component.update: epaper
    items:
      - type: Label
        text: "no notifications"

script:

  # -------------- UPDATE MENU ---------------------
  - id: script_update_notifications_menu
    mode: restart
    then:
      - delay: 300ms
      - lambda: |-
          auto* root = new display_menu_base::MenuItemMenu();
          id(notifications_menu)->set_root_item(root);
          id(global_notifications_menu_root) = root;

          bool added = false;
          for (const auto& pair : id(global_notifications)) {
            const std::string& raw = pair.second;
            StaticJsonDocument<512> doc;
            if (deserializeJson(doc, raw.c_str()) != DeserializationError::Ok) continue;

            std::string src = doc["src"] | "";
            std::string title = doc["title"] | "";
            std::string subject = doc["subject"] | "";

            const std::string& content = !subject.empty() ? subject : (!title.empty() ? title : doc["body"] | "");

            char label[96];
            snprintf(label, sizeof(label), "%s: %s", src.c_str(), content.c_str());

            auto* item = new display_menu_base::MenuItem(display_menu_base::MENU_ITEM_LABEL);
            item->set_text(label);
            root->add_item(item);
            added = true;
          }

          if (!added) {
            auto* empty = new display_menu_base::MenuItem(display_menu_base::MENU_ITEM_LABEL);
            empty->set_text("(no notifications)");
            root->add_item(empty);
          }

          id(notifications_menu).show_main();
  
  # -------------- DRAW PAGE -----------------------
 
  - id: script_notifications_page_update
    then:
      - lambda: |-
          if (id(global_page) != PAGE_NOTIFICATIONS)
            return;

          auto y = 23;

          auto w = id(epaper).get_width();
          auto h = id(epaper).get_height();
          id(epaper).menu(0, y, id(notifications_menu), w, h - 2*y);

          return;

    # ------------ LEFT BUTTONS --------------------
  - id: script_notifications_page_btn_left_top_short
    then:
      - lambda: |-
          if (id(global_page) != PAGE_NOTIFICATIONS)
            return;

          return;

  - id: script_notifications_page_btn_left_top_long
    then:
      - lambda: |-
          if (id(global_page) != PAGE_NOTIFICATIONS)
            return;

          return;
          
  - id: script_notifications_page_btn_left_bottom_short
    then:
      - lambda: |-
          if (id(global_page) != PAGE_NOTIFICATIONS)
            return;

          return;

  - id: script_notifications_page_btn_left_bottom_long
    then:
      - lambda: |-
          if (id(global_page) != PAGE_NOTIFICATIONS)
            return;

          return;

    # ------------ RIGHT BUTTONS --------------------
  - id: script_notifications_page_btn_right_top_short
    then:
      - lambda: |-
          if (id(global_page) != PAGE_NOTIFICATIONS)
            return;

          return;

  - id: script_notifications_page_btn_right_top_long
    then:
      - lambda: |-
          if (id(global_page) != PAGE_NOTIFICATIONS)
            return;

          return;
          
  - id: script_notifications_page_btn_right_bottom_short
    then:
      - lambda: |-
          if (id(global_page) != PAGE_NOTIFICATIONS)
            return;

          return;

  - id: script_notifications_page_btn_right_bottom_long
    then:
      - lambda: |-
          if (id(global_page) != PAGE_NOTIFICATIONS)
            return;

          return;
